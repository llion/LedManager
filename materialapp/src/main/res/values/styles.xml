<?xml version="1.0" encoding="utf-8"?>
<resources>

    <style name="CustomTheme" parent="MaterialDrawerTheme.TranslucentStatus">
        <!-- ...and here we setting appcompat’s color theme attrs -->
        <item name="colorPrimary">#F1433C</item>
        <item name="colorPrimaryDark">#D03033</item>
        <item name="colorAccent">#02A8F3</item>

        <!-- MaterialDrawer specific values -->
        <item name="material_drawer_background">@color/material_drawer_dark_background</item>
        <item name="material_drawer_primary_text">@color/material_drawer_dark_primary_text</item>
        <item name="material_drawer_secondary_text">@color/material_drawer_dark_secondary_text
        </item>
        <item name="material_drawer_hint_text">@color/material_drawer_dark_hint_text</item>
        <item name="material_drawer_divider">@color/material_drawer_dark_divider</item>
        <item name="material_drawer_selected">@color/material_drawer_dark_selected</item>
        <item name="material_drawer_selected_text">#F1433C</item>
        <item name="material_drawer_header_selection_text">
            @color/material_drawer_dark_primary_text
        </item>

        <!-- CAB :D -->
        <item name="windowActionModeOverlay">true</item>
    </style>

    <!--
    Overwrite the Style of the BezelImageView for the whole MaterialDrawer
    <style name="BezelImageView">
        <item name="biv_maskDrawable">@drawable/material_drawer_square_mask</item>
        <item name="biv_drawCircularShadow">false</item>
        <item name="biv_selectorOnPress">@color/material_drawer_primary</item>
    </style>
    -->

    <style name="FullscreenTheme" parent="MaterialDrawerTheme.Light.DarkToolbar.TranslucentStatus">

        <item name="android:windowContentOverlay">@null</item>

    </style>


    <!--
        Base application theme, dependent on API level. This theme is replaced
       by AppBaseTheme from res/values-vXX/styles.xml on newer devices.
   -->
    <style name="AppBaseTheme" parent="android:Theme.Light">
        <!--
             Theme customizations available in newer API levels can go in res/values-vXX/styles.xml,
			while customizations related to backward-compatibility can go here.
        -->
        <item name="android:windowContentOverlay">@null</item>
    </style>

    <!-- Application theme. -->
    <style name="AppTheme" parent="AppBaseTheme">
        <!--
             All customizations that are NOT specific to a particular API-level
			can go here.
        -->
        <item name="elevation">0dp</item>
    </style>

    <style name="dialog" parent="@android:style/Theme.Dialog">
        <item name="android:windowFrame">@null</item>
        <!-- 边框 -->
        <item name="android:windowIsFloating">true</item>
        <!-- 是否浮现在activity之上 -->
        <item name="android:windowIsTranslucent">false</item>
        <!-- 半透明 -->
        <item name="android:windowNoTitle">true</item>
        <!-- 无标题 -->
        <item name="android:background">@android:color/transparent</item>
        <item name="android:windowBackground">@android:color/transparent</item>
        <item name="android:backgroundDimEnabled">true</item>
        <item name="android:backgroundDimAmount">0.6</item>
        <!-- 模糊 -->
    </style>

    <style name="tab_rdo_style">
        <item name="android:textSize">14sp</item>
        <item name="android:button">@null</item>
        <item name="android:background">@null</item>
        <item name="android:gravity">center</item>
        <item name="android:textColor">@color/white</item>
    </style>

    <!-- 自定义loading dialog 样式 -->
    <style name="loading_dialog" parent="android:style/Theme.Dialog">
        <item name="android:windowFrame">@null</item>
        <item name="android:windowNoTitle">true</item>
        <item name="android:windowBackground">@color/transparent</item>
        <item name="android:windowIsFloating">true</item>
        <item name="android:windowContentOverlay">@null</item>
    </style>

    <style name="port_area_edit">
        <item name="android:textSize">12sp</item>
        <item name="android:focusable">true</item>
        <item name="android:focusableInTouchMode">true</item>
    </style>

    <style name="edit_text_focus">
        <item name="android:focusable">true</item>
        <item name="android:focusableInTouchMode">true</item>
    </style>


    <style name="AnimBottom" parent="@android:style/Animation">
        <item name="android:windowEnterAnimation">@anim/push_bottom_in</item>
        <item name="android:windowExitAnimation">@anim/push_bottom_out</item>
    </style>

    <style name="customSwitch">
        <item name="android:switchMinWidth">0dp</item>
        <item name="android:textOff"/>
        <item name="android:textOn"/>
        <item name="android:checked">false</item>
        <item name="android:thumb">@drawable/custom_swith_thumb</item>
        <item name="android:thumbTextPadding">@dimen/dp_15</item>
        <item name="android:track">@drawable/custom_switch_track</item>
    </style>


</resources>